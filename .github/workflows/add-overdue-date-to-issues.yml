# This is a basic workflow to help you get started with Actions

name: Add the Overdue On date to issues

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-status:
    name: Check status on issue
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TN_PAT }}
          script: |
            const query = `query($owner:String!, $projectNum:Int!) {
              user(login:$owner) { 
                projectV2(number:$projectNum) { 
                  items(first: 100) {
                    nodes { 
                      id 
                      fieldValues(first: 100) {
                        nodes {
                          ... on ProjectV2ItemFieldTextValue {
                            text
                            id
                            updatedAt
                            createdAt
                            creator {
                              url
                            }
                          }
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            field {
                              ... on ProjectV2SingleSelectField {
                                name
                              }
                            }
                            name
                            id
                          }
                          ... on ProjectV2ItemFieldDateValue { 
                            field {
                              ... on ProjectV2Field {
                                name
                              }
                            }
                            date
                          }
                        }
                      }  
                    } 
                  } 
                }
              }
            } `;
            const variables = {
              owner: context.repo.owner,
              projectNum: 170,
            }
            const result = await github.graphql(query, variables)
            console.log("result: " + result)

            var OverdueOnDate = ''
            var isSquadWork = false
            var isOverdueOnSet = false
            var createdAt = ''
            
            for (const projectItem of result.user.projectV2.items.nodes){
              console.log("projectItem ID: " + projectItem.id)
              for (const fieldValue of projectItem.fieldValues.nodes) {
                console.log("fieldValue field: " + fieldValue.field)
                console.log("fieldValue ID: " + fieldValue.id)
                console.log("fieldValue createdAt: " + fieldValue.createdAt)
                console.log("fieldValue text: " + fieldValue.text)
                if (fieldValue.field !== undefined){
                  console.log("field name: " + fieldValue.field.name)
                  if (fieldValue.field.name === 'Status'){
                    console.log("--Found the Status field--")
                    console.log("Status field value: " + fieldValue.name)
                    if (fieldValue.name === 'Squad Work'){
                      console.log("--Found the Status value ---- SQUAD WORK --")
                      console.log("Status value: " + fieldValue.name)
                      isSquadWork = true
                    }
                  } 
                  if (fieldValue.name === 'Overdue On'){
                    console.log("Overdue date: " + fieldValue.date)
                    isOverdueOnSet = true
                  }
                } else {
                  createdAt = fieldValue.createdAt
                }                  
              }
              if (isSquadWork && !isOverdueOnSet){
                var createdAtString = createdAt
                var createdAtDate = new Date(createdAtString)
                createdAtDate.setDate(createdAtDate.getDate() + 10)

                var OverdueOnString = createdAtDate.toISOString().split('T')[0]
                console.log('New OverdueOn: ' + OverdueOnString)
              }
            }
            
            
            
            //for (const node of result.repository.issues.nodes) {
            //  console.log("Node Id: " + node.id)
            //}
            //console.log(result)
            //const currentDateTime = new Date();
            //console.log('Current DateTime:', currentDateTime.toISOString());
