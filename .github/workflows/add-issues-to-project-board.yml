# This is a basic workflow to help you get started with Actions

name: Add issues to Bot-created-project board

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  issues:
    types:
      - opened
      - reopened
      - transferred
  project_card:
    types:
      - moved
  pull_request:
    types:
      - opened
      - reopened

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  add-to-project:
    name: Add issue to project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/add-to-project@v0.5.0
        with:
          # You can target a repository in a different organization
          # to the issue
          project-url: https://github.com/users/TravisNickels/projects/170
          github-token: ${{ secrets.TN_PAT }}
  update-action-item-status:
    name: Update the status of the action item issue to `Squad Work`
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@master
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TN_PAT }}
          script: |
            // Use dynamic import to import the ES6 module
            const { default: script } = await import('.github/scripts/change-action-items-status.mjs');

            // Call the function from the imported module
            await script({github, context});

      #const script = require('.github/scripts/change-action-items-status.mjs');
      #(async () => {
      #  await script({github, context});
      #})();
  #check-status:
  #  name: Check status on issue
  #  runs-on: ubuntu-latest
  #  permissions:
  #    issues: write
  #  steps:
  #    - uses: actions/github-script@v6
  #      with:
  #        script: |
  #          github.rest.issues.addLabels({
  #            issue_number: context.issue.number,
  #            owner: context.repo.owner,
  #            repo: context.repo.repo,
  #            labels: ["bug"]
  #          })
